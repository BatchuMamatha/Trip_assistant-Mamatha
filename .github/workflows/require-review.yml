name: Require Review Before Merge

on:
  pull_request_target:
    types: [opened, reopened, ready_for_review, synchronize]

jobs:
  add-review-label:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Label PR as needing review
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;

            // Check if label already exists
            const labels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber
            });

            if (!labels.data.some(label => label.name === 'awaiting-review-owner')) {
              await github.rest.issues.addLabels({
                issue_number: prNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: ['awaiting-review-owner']
              });

              await github.rest.issues.createComment({
                issue_number: prNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## Review Required ⚠️
                
Thank you for your contribution! 

This PR requires review from @Richajaishwal0 before it can be merged. The PR has been labeled with \`awaiting-review-owner\`.

Please be patient while waiting for the review. If there's any urgency, feel free to mention @Richajaishwal0 in a comment.

Thank you for your understanding.`
              });
            }

  check-review-status:
    needs: add-review-label
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    steps:
      - name: Check if review is required
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const core = require('@actions/core');
            const owner = 'Richajaishwal0';
            const prNumber = context.payload.pull_request.number;

            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });

            const ownerReviewed = reviews.data.some(review =>
              review.user.login === owner &&
              (review.state === 'APPROVED' || review.state === 'CHANGES_REQUESTED')
            );

            if (!ownerReviewed) {
              core.setFailed(`PR requires review from ${owner} before merging`);
            } else {
              console.log(`PR has been reviewed by ${owner}`);
            }
